import{_ as e,c as o,a0 as r,o as a}from"./chunks/framework.CGHvQLJz.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Docker/基本概念/镜像(Image).md","filePath":"Docker/基本概念/镜像(Image).md"}'),n={name:"Docker/基本概念/镜像(Image).md"};function s(i,t,l,p,c,g){return a(),o("div",null,t[0]||(t[0]=[r('<p><strong>Docker 镜像</strong> 是一个轻量级、可执行的软件包，包含运行某个应用所需的所有代码、库、依赖和配置文件。镜像是容器的蓝图，容器则是镜像的一个实例。</p><h3 id="主要特点" tabindex="-1">主要特点： <a class="header-anchor" href="#主要特点" aria-label="Permalink to &quot;主要特点：&quot;">​</a></h3><ol><li><p><strong>层次结构</strong>：镜像由多个层组成，每一层代表一组文件的更改。这种结构使得镜像可以高效存储和共享。</p></li><li><p><strong>不可变性</strong>：一旦创建，镜像不会被修改。任何更改都会产生一个新的镜像层。</p></li><li><p><strong>可重用性</strong>：镜像可以在不同的环境中重复使用，支持跨平台部署。</p></li><li><p><strong>版本控制</strong>：通过标签（tag）管理不同版本的镜像，便于版本管理和回滚。</p></li><li><p><strong>轻量化</strong>：镜像通常比传统虚拟机镜像要小得多，启动速度快，资源占用低。</p></li></ol>',3)]))}const _=e(n,[["render",s]]);export{m as __pageData,_ as default};
